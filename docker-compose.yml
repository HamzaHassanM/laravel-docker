version: '3'
services:
  webserver:
    image: nginx:alpine
    restart: always
    container_name: web
    depends_on:
      - php
      - mysqldb
    volumes:
      - ./etc/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./web:/var/www/html
      - ./etc/nginx/default.template.conf:/etc/nginx/conf.d/default.template
    ports:
      - 8000:80
      - 3000:443
    environment:
      - NGINX_HOST=${NGINX_HOST}
    command: /bin/sh -c "envsubst '$$NGINX_HOST' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    networks:
      - appnet

  mysqldb:
    image: mysql:${MYSQL_VERSION}
    container_name: ${MYSQL_HOST}
    restart: always
    env_file:
      - ".env"
    volumes:
      - "./data/db/mysql:/var/lib/mysql"
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    ports:
      - 3306:3306
    networks:
      - appnet

  myadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    ports:
      - "8080:80"
    environment:
      # PMA_ARBITRARY: 1
      PMA_HOST: ${MYSQL_HOST}
      # MYSQL_ROOT_PASSWORD: test
      # - PMA_PORT=3306
      # - MYSQL_USERNAME=root
      # - MYSQL_ROOT_PASSWORD=root
    restart: always
    depends_on:
      - mysqldb
    networks:
      - appnet

  php:
    image: php:${PHP_VERSION}
    restart: always
    container_name: app
    volumes:
      - ./etc/php/php.ini:/usr/local/etc/php/conf.d/php.ini
      - ./web:/var/www/html
    networks:
      - appnet

  composer:
    image: "composer"
    container_name: composer
    volumes:
      - ./web:/app
    command: install

networks:
  appnet:
    driver: "bridge"

